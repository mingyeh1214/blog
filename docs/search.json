[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bennie's BLOG",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\nHello, Quarto\n\n\n以官網範例檔案為基礎，介紹如何使用R Quarto\n\n\n\nJun 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nJun 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nHello, Python\n\n\nPython基礎\n\n\n\nJun 13, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nJun 10, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "ABOUT",
    "section": "",
    "text": "about"
  },
  {
    "objectID": "posts/hello-quarto/index.html",
    "href": "posts/hello-quarto/index.html",
    "title": "Hello, Quarto",
    "section": "",
    "text": "Code```{r}\n#| label: load-packages\n\nlibrary(tidyverse)      # for data wrangling and visualization\nlibrary(palmerpenguins) # for data\nlibrary(openintro)      # for data\nlibrary(knitr)          # for tables\nlibrary(broom)          # for model summary\nlibrary(xfun)\nlibrary(remotes)\n```"
  },
  {
    "objectID": "posts/hello-quarto/index.html#meet-quarto",
    "href": "posts/hello-quarto/index.html#meet-quarto",
    "title": "Hello, Quarto",
    "section": "Meet Quarto",
    "text": "Meet Quarto\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "posts/hello-quarto/index.html#meet-the-penguins",
    "href": "posts/hello-quarto/index.html#meet-the-penguins",
    "title": "Hello, Quarto",
    "section": "Meet the penguins",
    "text": "Meet the penguins\npenguins 資料集\n\n\n\n\n\nThe penguins data from the palmerpenguins package contains size measurements for 344 penguins from three species observed on three islands in the Palmer Archipelago, Antarctica.\nThe plot below shows the relationship between flipper and bill lengths of these penguins."
  },
  {
    "objectID": "posts/hello-quarto/index.html#introduction",
    "href": "posts/hello-quarto/index.html#introduction",
    "title": "Hello, Quarto",
    "section": "Introduction",
    "text": "Introduction\nIn this analysis, we build a model predicting sale prices of houses based on data on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020. Let’s start by loading the packages we’ll use for the analysis.\nWe present the results of exploratory data analysis in Section 4.2 and the regression model in Section 4.3.\nWe’re going to do this analysis using literate programming [@knuth1984]."
  },
  {
    "objectID": "posts/hello-quarto/index.html#sec-eda",
    "href": "posts/hello-quarto/index.html#sec-eda",
    "title": "Hello, Quarto",
    "section": "Exploratory data analysis",
    "text": "Exploratory data analysis\nThe data contains 98 houses. As part of the exploratory analysis let’s visualize and summarize the relationship between areas and prices of these houses.\nData visualization\nFigure 3 shows two histograms displaying the distributions of price and area individually.\n\nCodeggplot(duke_forest, aes(x = price)) +\n  geom_histogram(binwidth = 50000) +\n  labs(title = \"Histogram of prices\")\n\nggplot(duke_forest, aes(x = area)) +\n  geom_histogram(binwidth = 250) +\n  labs(title = \"Histogram of areas\")\n\n\n\n\n\n(a) Histogram of prices\n\n\n\n\n\n(b) Histogram of areas\n\n\n\nFigure 3: Histograms of individual variables\n\n\n\nFigure 4 displays the relationship between these two variables in a scatterplot.\n\nCodeggplot(duke_forest, aes(x = area, y = price)) +\n  geom_point() +\n  labs(title = \"Price and area of houses in Duke Forest\")\n\n\n\nFigure 4: Scatterplot of price vs. area of houses in Duke Forest\n\n\n\nSummary statistics\nTable 1 displays basic summary statistics for these two variables.\n\nCodeduke_forest %&gt;%\n  summarise(\n    `Median price` = median(price),\n    `IQR price` = IQR(price),\n    `Median area` = median(area),\n    `IQR area` = IQR(area),\n    `Correlation, r` = cor(price, area)\n    ) %&gt;%\n  kable(digits = c(0, 0, 0, 0, 2))\n\n\n\nTable 1: Summary statistics for price and area of houses in Duke Forest\n\nMedian price\nIQR price\nMedian area\nIQR area\nCorrelation, r\n\n\n540000\n193125\n2623\n1121\n0.67"
  },
  {
    "objectID": "posts/hello-quarto/index.html#sec-model",
    "href": "posts/hello-quarto/index.html#sec-model",
    "title": "Hello, Quarto",
    "section": "Modeling",
    "text": "Modeling\nWe can fit a simple linear regression model of the form shown in Equation 1.\n\nprice = \\hat{\\beta}_0 + \\hat{\\beta}_1 \\times area + \\epsilon\n\\tag{1}\nTable 2 shows the regression output for this model.\n\nCodeprice_fit &lt;- lm(price ~ area, data = duke_forest)\n  \nprice_fit %&gt;%\n  tidy() %&gt;%\n  kable(digits = c(0, 0, 2, 2, 2))\n\n\n\nTable 2: Linear regression model for predicting price from area\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n(Intercept)\n116652\n53302.46\n2.19\n0.03\n\n\narea\n159\n18.17\n8.78\n0.00\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis is a pretty incomplete analysis, but hopefully the document provides a good overview of some of the authoring features of Quarto!"
  },
  {
    "objectID": "posts/hello-quarto/index.html#references",
    "href": "posts/hello-quarto/index.html#references",
    "title": "Hello, Quarto",
    "section": "References",
    "text": "References"
  },
  {
    "objectID": "posts/hello-quarto/index.html#行內方程式",
    "href": "posts/hello-quarto/index.html#行內方程式",
    "title": "Hello, Quarto",
    "section": "行內方程式",
    "text": "行內方程式\n常態分佈機率密度函數：f(x)=\\dfrac{1}{\\sigma\\sqrt{2\\pi}}e\\^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}"
  },
  {
    "objectID": "posts/hello-quarto/index.html#單行方程式",
    "href": "posts/hello-quarto/index.html#單行方程式",
    "title": "Hello, Quarto",
    "section": "單行方程式",
    "text": "單行方程式\n\nf(x)=\\dfrac{1}{\\sigma\\sqrt{2\\pi}}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}\n\\tag{2}"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/hello-quarto/index.html#mermaid",
    "href": "posts/hello-quarto/index.html#mermaid",
    "title": "Hello, Quarto",
    "section": "Mermaid",
    "text": "Mermaid\n\nCodeflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n  C --&gt; D[Result one]\n  C --&gt; E[Result two]\n\n\n\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n  C --&gt; D[Result one]\n  C --&gt; E[Result two]\n\n\nFigure 5: a flowchart created using Mermaid"
  },
  {
    "objectID": "posts/hello-quarto/index.html#graphviz",
    "href": "posts/hello-quarto/index.html#graphviz",
    "title": "Hello, Quarto",
    "section": "Graphviz",
    "text": "Graphviz\n\nCodegraph G {\n  layout=neato\n  run -- intr;\n  intr -- runbl;\n  runbl -- run;\n  run -- kernel;\n  kernel -- zombie;\n  kernel -- sleep;\n  kernel -- runmem;\n  sleep -- swap;\n  swap -- runswap;\n  runswap -- new;\n  runswap -- runmem;\n  new -- runmem;\n  sleep -- runmem;\n}\n\n\n\n\nG\n\n\nrun\n\nrun\nintr\n\nintr\nrun–intr\n\n\nkernel\n\nkernel\nrun–kernel\n\n\nrunbl\n\nrunbl\nintr–runbl\n\n\nrunbl–run\n\n\nzombie\n\nzombie\nkernel–zombie\n\n\nsleep\n\nsleep\nkernel–sleep\n\n\nrunmem\n\nrunmem\nkernel–runmem\n\n\nsleep–runmem\n\n\nswap\n\nswap\nsleep–swap\n\n\nrunswap\n\nrunswap\nswap–runswap\n\n\nrunswap–runmem\n\n\nnew\n\nnew\nrunswap–new\n\n\nnew–runmem\n\n\n\nFigure 6: This is a simple graphviz graph."
  },
  {
    "objectID": "posts/hello-quarto/index.html#screen-column",
    "href": "posts/hello-quarto/index.html#screen-column",
    "title": "Hello, Quarto",
    "section": "Screen Column",
    "text": "Screen Column\n\nCode# library(leaflet)\n# leaflet() %&gt;%\n#   addTiles() %&gt;%  # Add default OpenStreetMap map tiles\n#   addMarkers(lng=174.768, lat=-36.852, popup=\"The birthplace of R\")"
  },
  {
    "objectID": "posts/hello-quarto/index.html#margin-content",
    "href": "posts/hello-quarto/index.html#margin-content",
    "title": "Hello, Quarto",
    "section": "Margin Content",
    "text": "Margin Content\n::: {.column-margin}\nWe know from *the first fundamental theorem of calculus* that for $x$ in $[a, b]$:\n\n$$\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).$$\n:::\n\n\nWe know from the first fundamental theorem of calculus that for x in [a, b]:\n\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x)."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "ABOUT",
    "section": "Education",
    "text": "Education\nEducation"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "ABOUT",
    "section": "Experience",
    "text": "Experience\nExperience"
  },
  {
    "objectID": "about.html#education-1",
    "href": "about.html#education-1",
    "title": "ABOUT",
    "section": "Education",
    "text": "Education\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "about.html#experience-1",
    "href": "about.html#experience-1",
    "title": "ABOUT",
    "section": "Experience",
    "text": "Experience\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018"
  },
  {
    "objectID": "posts/hello-quarto/index.html#footnotes",
    "href": "posts/hello-quarto/index.html#footnotes",
    "title": "Hello, Quarto",
    "section": "Footnotes",
    "text": "Footnotes\n\nthis is footnote↩︎"
  },
  {
    "objectID": "posts/python/index.html",
    "href": "posts/python/index.html",
    "title": "Hello, Python",
    "section": "",
    "text": "Complete-Python-3-Bootcamp"
  },
  {
    "objectID": "posts/python/index.html#number",
    "href": "posts/python/index.html#number",
    "title": "Hello, Python",
    "section": "1.1 Number",
    "text": "1.1 Number\n\n5 / 2\n5 % 2\n2 ** 3\n\n8"
  },
  {
    "objectID": "posts/python/index.html#list",
    "href": "posts/python/index.html#list",
    "title": "Hello, Python",
    "section": "1.4 list",
    "text": "1.4 list\n\n# list可以像str一樣操作\nlist = ['one', 'two']\nlist.append('three')\nlist\n\n['one', 'two', 'three']\n\n\n\nlist.pop()\nlist\n\n['one', 'two']\n\n\n\nlist.pop(0)\nlist\n\n['two']\n\n\n\nlist = ['d', 'a', 'c', 'b']\nlist.sort()\nlist\n\n['a', 'b', 'c', 'd']\n\n\n\nlist.reverse()\nlist\n\n['d', 'c', 'b', 'a']"
  },
  {
    "objectID": "posts/python/index.html#dict",
    "href": "posts/python/index.html#dict",
    "title": "Hello, Python",
    "section": "1.5 dict",
    "text": "1.5 dict\n\ndict = {'k1':123, 'k2':[0,1,2], 'k3':{'k31':100}}\ndict['k3']['k31']\n\n100\n\n\n\ndict['k4'] = 'string'\ndict\n\n{'k1': 123, 'k2': [0, 1, 2], 'k3': {'k31': 100}, 'k4': 'string'}\n\n\n\ndict.keys()\n\ndict_keys(['k1', 'k2', 'k3', 'k4'])\n\n\n\ndict.values()\n\ndict_values([123, [0, 1, 2], {'k31': 100}, 'string'])\n\n\n\ndict.items()\n\ndict_items([('k1', 123), ('k2', [0, 1, 2]), ('k3', {'k31': 100}), ('k4', 'string')])"
  },
  {
    "objectID": "posts/python/index.html#tup",
    "href": "posts/python/index.html#tup",
    "title": "Hello, Python",
    "section": "1.6 tup",
    "text": "1.6 tup\n\ntup = ('one', 'two')\ntry:\n    tup[0] = 'new'\nexcept Exception as e:\n    print(e)\n\n'tuple' object does not support item assignment"
  },
  {
    "objectID": "posts/python/index.html#set",
    "href": "posts/python/index.html#set",
    "title": "Hello, Python",
    "section": "1.7 set",
    "text": "1.7 set\n\nlist = [1,1,1,2,2]\nset(list) # 取得唯一\n\n{1, 2}\n\n\n\nset('Parallel') # 將string取出唯一字母\n\n{'P', 'a', 'e', 'l', 'r'}"
  },
  {
    "objectID": "posts/python/index.html#查詢變數資料型態",
    "href": "posts/python/index.html#查詢變數資料型態",
    "title": "Hello, Python",
    "section": "1.2 查詢變數資料型態",
    "text": "1.2 查詢變數資料型態\n\nfloat = 1.0\ntype(float)\n\nfloat"
  },
  {
    "objectID": "posts/python/index.html#string",
    "href": "posts/python/index.html#string",
    "title": "Hello, Python",
    "section": "1.3 string",
    "text": "1.3 string\n\nstr = 'hello'\nlen(str)\n\n5\n\n\n\nstr[0]\n\n'h'\n\n\n\nstr[1]\n\n'e'\n\n\n\nstr[-1]\n\n'o'\n\n\n\nstr[2:]\n\n'llo'\n\n\n\nstr[:2]\n\n'he'\n\n\n\nstr[2:4]\n\n'll'\n\n\n\nstr[::2]\n\n'hlo'\n\n\n\nstr[::-1] # 反轉字串\n\n'olleh'\n\n\n\nstr.upper()\n\n'HELLO'\n\n\n\nstr.lower()\n\n'hello'\n\n\n\nstr = str + ',there'\nstr.split(',')\n\n['hello', 'there']\n\n\n\n'1. This is a string \\'{}\\', and length is {}'.format(str, len(str))\n\n\"1. This is a string 'hello,there', and length is 11\"\n\n\n\n'2. This is a string \\'{0}\\', and length is {1}'.format(str, len(str))\n\n\"2. This is a string 'hello,there', and length is 11\"\n\n\n\n'3. This is a string \\'{a}\\', and length is {b}'.format(a = str, b = len(str))\n\n\"3. This is a string 'hello,there', and length is 11\"\n\n\n\nf'4. This is a string \\'{str}\\', and length is {len(str)}'\n\n\"4. This is a string 'hello,there', and length is 11\"\n\n\n\nfloat = 100/777\n'The result was {r:6.3f}'.format(r=float) # Flaot formatting follows \"{value:width.precision f}\"\n\n'The result was  0.129'"
  },
  {
    "objectID": "posts/python/index.html#inheritance",
    "href": "posts/python/index.html#inheritance",
    "title": "Hello, Python",
    "section": "6.1 Inheritance",
    "text": "6.1 Inheritance\n\nclass Circle():\n    pi=3.14\n    def __init__(self, radius=1):\n        self.radius=radius\n    def get_circumference(self):\n        return 2*self.pi*self.radius\n    def get_circumarea(self):\n        return self.pi*self.radius*self.radius\nc = Circle(3)\nc.get_circumference()\nc.get_circumarea()\n\n28.259999999999998\n\n\n\nclass Ball(Circle):\n    def __init__(self, radius):\n        Circle.__init__(self, radius)\n    def get_ballsurface(self):\n        return 4*self.pi*(self.radius**2)\n    def get_ballvolumne(self):\n        return 4/3*self.pi*(self.radius**3)\nb = Ball(3)\nb.get_ballvolumne()\n\n113.03999999999999"
  },
  {
    "objectID": "posts/python/index.html#polymorphism",
    "href": "posts/python/index.html#polymorphism",
    "title": "Hello, Python",
    "section": "6.2 Polymorphism",
    "text": "6.2 Polymorphism\n\nclass Animal:\n    def __init__(self, name):# Constructor of the class\n        self.name = name\n\n    def speak(self):# Abstract method, defined by convention only\n        raise NotImplementedError(\"Subclass must implement abstract method\")\n\n\nclass Dog(Animal):\n    \n    def speak(self):\n        return self.name+' says Woof!'\n    \nclass Cat(Animal):\n\n    def speak(self):\n        return self.name+' says Meow!'\n    \nfido = Dog('Fido')\nisis = Cat('Isis')\n\nprint(fido.speak())\nprint(isis.speak())\n\nFido says Woof!\nIsis says Meow!"
  },
  {
    "objectID": "posts/python/index.html#special-methods",
    "href": "posts/python/index.html#special-methods",
    "title": "Hello, Python",
    "section": "6.3 Special Methods",
    "text": "6.3 Special Methods\n\nclass Book:\n    def __init__(self, title, author, pages):\n        print(\"A book is created\")\n        self.title = title\n        self.author = author\n        self.pages = pages\n\n    def __str__(self):\n        return \"Title: %s, author: %s, pages: %s\" %(self.title, self.author, self.pages)\n\n    def __len__(self):\n        return self.pages\n\n    def __del__(self):\n        print(\"A book is destroyed\")\nbook = Book(\"Python Rocks!\", \"Jose Portilla\", 159)\n\n#Special Methods\nprint(book)\nprint(len(book))\ndel book\n\nA book is created\nTitle: Python Rocks!, author: Jose Portilla, pages: 159\n159\nA book is destroyed"
  }
]