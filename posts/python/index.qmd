---
title: "Hello, Python"
subtitle: "Python 教學"
date: "6/13/2023"
date-modified: "6/13/2023"
date-format: "YYYY-MM-DD"
author: "Bennie Liu"
abstract: "Python基礎"
highlight-style: pygments

format:
  html:
    code-fold: false
    code-tools: true
    code-link: true
    code-line-numbers: true
    toc: true
    df-print: paged
    html-math-method: katex
  # pdf:
  #   code-line-numbers: true
  #   geometry: 
  #     - top=30mm
  #     - left=30mm
  # docx: default
execute:
  echo: true
  warning: false
editor: visual
---

# Python資料型態

| Type                     | Description      |
|--------------------------|------------------|
| int                      | 1                |
| float                    | 2.3              |
| str                      | 'hello'          |
| list (ordered)           | \[1, 'hello'\]   |
| dict (unordered)         | {'key': 'value'} |
| tup (ordered, immutable) | (1, 'hello')     |
| set (unordered, unique)  | {1, 'hello'}     |
| bool                     | True or False    |

## Number

```{python}
5 / 2
5 % 2
2 ** 3
```

# 查詢變數資料型態

```{python}
float = 1.0
type(float)
```

# string

```{python}
str = 'hello'
len(str)
```

```{python}
str[0]
```

```{python}
str[1]
```

```{python}
str[-1]
```

```{python}
str[2:]
```

```{python}
str[:2]
```

```{python}
str[2:4]
```

```{python}
str[::2]
```

```{python}
str[::-1] # 反轉字串
```

```{python}
str.upper()
```

```{python}
str.lower()
```

```{python}
str = str + ',there'
str.split(',')
```

```{python}
'1. This is a string \'{}\', and length is {}'.format(str, len(str))
```

```{python}
'2. This is a string \'{0}\', and length is {1}'.format(str, len(str))
```

```{python}
'3. This is a string \'{a}\', and length is {b}'.format(a = str, b = len(str))
```

```{python}
f'4. This is a string \'{str}\', and length is {len(str)}'
```

```{python}
float = 100/777
'The result was {r:6.3f}'.format(r=float) # Flaot formatting follows "{value:width.precision f}"
```

## list

```{python}
# list可以像str一樣操作
list = ['one', 'two']
list.append('three')
list
```

```{python}
list.pop()
list
```

```{python}
list.pop(0)
list
```

```{python}
list = ['d', 'a', 'c', 'b']
list.sort()
list
```

```{python}
list.reverse()
list
```

## dict

```{python}
dict = {'k1':123, 'k2':[0,1,2], 'k3':{'k31':100}}
dict['k3']['k31']
```
```{python}
dict['k4'] = 'string'
dict
```
```{python}
dict.keys()
```

```{python}
dict.values()
```

```{python}
dict.items()
```

## tup

```{python}
tup = ('one', 'two')
try:
    tup[0] = 'new'
except Exception as e:
    print(e)
```

## set

```{python}
list = [1,1,1,2,2]
set(list) # 取得唯一
```

```{python}
set('Parallel') # 將string取出唯一字母
```










